{"ast":null,"code":"var _jsxFileName = \"/home/hanin/projects/courses/RESTy/src/App.js\";\nimport React from \"react\";\nimport \"./app.scss\";\nimport \"./compononts/Result/result.scss\"; // Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\n\nimport Header from \"./compononts/header\";\nimport Footer from \"./compononts/Footer\";\nimport Form from \"./compononts/Form\";\nimport Results from \"./compononts/Result\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async (requestParams, updateBody) => {\n      const respond = await axios.get(requestParams.url);\n      console.log(respond.data); // mock output\n      // const data = {\n      //   count: 2,\n      //   Header: [\n      //     {\n      //       root: \"fakeData\",\n      //       cache_control: \"string public\",\n      //       age: \"86400\",\n      //       s_maxage: \"86400\",\n      //     },\n      //   ],\n      //   Results: [\n      //     { name: \"fake thing 1\", url: \"http://fakethings.com/1\" },\n      //     { name: \"fake thing 2\", url: \"http://fakethings.com/2\" },\n      //   ],\n      // };\n\n      this.setState({\n        data: respond.data.results,\n        requestParams,\n        count: re\n      });\n      const update = {\n        count: 2,\n        Header: [{\n          root: \"fakeData\",\n          cache_control: \"string public\",\n          age: \"86400\",\n          s_maxage: \"86400\"\n        }],\n        Results: [{\n          body: updateBody\n        }]\n      };\n\n      if (updateBody) {\n        this.setState({\n          data: update\n        });\n      }\n    };\n\n    this.state = {\n      data: null,\n      requestParams: {},\n      count: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div1\",\n        \"data-testid\": \"url\",\n        children: [\" \", this.state.requestParams.method, \" \", this.state.requestParams.url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handleApiCall: this.callApi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        data: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hanin/projects/courses/RESTy/src/App.js"],"names":["React","Header","Footer","Form","Results","axios","App","Component","constructor","props","callApi","requestParams","updateBody","respond","get","url","console","log","data","setState","results","count","re","update","root","cache_control","age","s_maxage","body","state","render","method"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,YAAP;AACA,OAAO,iCAAP,C,CAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,OATmB,GAST,OAAOC,aAAP,EAAsBC,UAAtB,KAAqC;AAG7C,YAAMC,OAAO,GAAE,MAAMR,KAAK,CAACS,GAAN,CAAUH,aAAa,CAACI,GAAxB,CAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,IAApB,EAJ6C,CAK7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,WAAKC,QAAL,CAAc;AAAED,QAAAA,IAAI,EAACL,OAAO,CAACK,IAAR,CAAaE,OAApB;AAA6BT,QAAAA,aAA7B;AAA2CU,QAAAA,KAAK,EAACC;AAAjD,OAAd;AAEA,YAAMC,MAAM,GAAG;AACbF,QAAAA,KAAK,EAAE,CADM;AAEbpB,QAAAA,MAAM,EAAE,CACN;AACEuB,UAAAA,IAAI,EAAE,UADR;AAEEC,UAAAA,aAAa,EAAE,eAFjB;AAGEC,UAAAA,GAAG,EAAE,OAHP;AAIEC,UAAAA,QAAQ,EAAE;AAJZ,SADM,CAFK;AAUbvB,QAAAA,OAAO,EAAE,CAAC;AAAEwB,UAAAA,IAAI,EAAEhB;AAAR,SAAD;AAVI,OAAf;;AAYA,UAAIA,UAAJ,EAAgB;AACd,aAAKO,QAAL,CAAc;AAAED,UAAAA,IAAI,EAAEK;AAAR,SAAd;AACD;AACF,KAjDkB;;AAEjB,SAAKM,KAAL,GAAa;AACXX,MAAAA,IAAI,EAAE,IADK;AAEXP,MAAAA,aAAa,EAAE,EAFJ;AAGXU,MAAAA,KAAK,EAAC;AAHK,KAAb;AAKD;;AA4CDS,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,uBAAY,KAAlC;AAAA,mBACG,GADH,EAEG,KAAKD,KAAL,CAAWlB,aAAX,CAAyBoB,MAF5B,OAEqC,KAAKF,KAAL,CAAWlB,aAAX,CAAyBI,GAF9D;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,IAAD;AAAM,QAAA,aAAa,EAAE,KAAKL;AAA1B;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKmB,KAAL,CAAWX;AAA1B;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAlE+B;;AAqElC,eAAeZ,GAAf","sourcesContent":["import React from \"react\";\n\nimport \"./app.scss\";\nimport \"./compononts/Result/result.scss\";\n\n// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from \"./compononts/header\";\nimport Footer from \"./compononts/Footer\";\nimport Form from \"./compononts/Form\";\nimport Results from \"./compononts/Result\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      requestParams: {},\n      count:0\n    };\n  }\n\n  callApi = async (requestParams, updateBody) => {\n\n\n    const respond= await axios.get(requestParams.url)\n    console.log(respond.data);\n    // mock output\n    // const data = {\n    //   count: 2,\n    //   Header: [\n    //     {\n    //       root: \"fakeData\",\n    //       cache_control: \"string public\",\n    //       age: \"86400\",\n    //       s_maxage: \"86400\",\n    //     },\n    //   ],\n    //   Results: [\n    //     { name: \"fake thing 1\", url: \"http://fakethings.com/1\" },\n    //     { name: \"fake thing 2\", url: \"http://fakethings.com/2\" },\n    //   ],\n    // };\n    \n\n    this.setState({ data:respond.data.results, requestParams,count:re });\n\n    const update = {\n      count: 2,\n      Header: [\n        {\n          root: \"fakeData\",\n          cache_control: \"string public\",\n          age: \"86400\",\n          s_maxage: \"86400\",\n        },\n      ],\n      Results: [{ body: updateBody }],\n    };\n    if (updateBody) {\n      this.setState({ data: update });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div className=\"div1\" data-testid=\"url\">\n          {\" \"}\n          {this.state.requestParams.method} {this.state.requestParams.url}\n        </div>\n        \n        <Form handleApiCall={this.callApi} />\n        <Results data={this.state.data} />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}