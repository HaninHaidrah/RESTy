{"ast":null,"code":"var _jsxFileName = \"/home/hanin/projects/courses/RESTy/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect, use } from \"react\";\nimport \"./app.scss\"; // import \"./compononts/Result/result.scss\";\n\nimport Header from \"./compononts/header\";\nimport Footer from \"./compononts/Footer\";\nimport Form from \"./compononts/Form\";\nimport Results from \"./compononts/Result\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst intial = [];\n\nlet reducer = function () {\n  let history = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intial;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case \"reqParams\":\n      history = [...history, payload];\n      console.log(history[0].method);\n      return history;\n\n    default:\n      return history;\n  }\n}; // handle payload for reqParams:\n\n\nconst params = (url, method, result) => {\n  return {\n    type: \"reqParams\",\n    payload: {\n      url,\n      method,\n      result\n    }\n  };\n};\n\nexport default function App() {\n  _s();\n\n  const [vars, dispatch] = useReducer(reducer, intial);\n  const [data, setData] = useState(null);\n  const [requestParams, setRequestParams] = useState({});\n  const [requestBody, setRequestBody] = useState({});\n  useEffect(async () => {\n    setData(null);\n\n    if (requestBody) {\n      const result = await axios[requestParams.method](requestParams.url, JSON.parse(requestBody));\n      const data = {\n        headers: result.headers,\n        count: result.data.count,\n        results: result.data.results\n      };\n      setData(data);\n      dispatch(addToHistory(requestParams.url, requestParams.method, data));\n    } else {\n      const result = await axios[requestParams.method](requestParams.url);\n      const data = {\n        headers: result.headers,\n        count: result.data.count,\n        results: result.data.results\n      };\n      setData(data);\n      dispatch(addToHistory(requestParams.url, requestParams.method, data));\n    }\n  }, [requestParams]);\n\n  function callApi(requestParams, requestBody) {\n    // mock output\n    setRequestParams(requestParams);\n    setRequestBody(requestBody);\n  }\n\n  function historyfunc(result) {\n    setData(result);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleApiCall: callApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), history && /*#__PURE__*/_jsxDEV(History, {\n      historyfunc: historyfunc,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} //   const callApi = async (requestParams, requestBody) => {\n//     //get the url and method:\n//     dispatch(params(requestParams.url, requestParams.method));\n//     // to get the results and then save them :\n//     let respond = await axios.get(requestParams.url);\n//     dispatch(params(requestParams.url, requestParams.method, respond.data));\n//   };\n//   console.log(vars);\n//   return (\n//     <>\n//       <React.Fragment>\n//         <Header />\n//         <div className=\"div1\" data-testid=\"url\">\n//           {\" \"}\n//           {vars[0].method} {vars[0].url}\n//           {/* {vars.history.result} */}\n//         </div>\n//         <Form handleApiCall={callApi} />\n//         <Results data={vars.result} />\n//         <Footer />\n//       </React.Fragment>\n//     </>\n//   );\n// }\n\n_s(App, \"McUBdIX88Oo3TTPTmW6QLP7eeaY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/hanin/projects/courses/RESTy/src/App.js"],"names":["React","useReducer","useEffect","use","Header","Footer","Form","Results","axios","intial","reducer","history","action","type","payload","console","log","method","params","url","result","App","vars","dispatch","data","setData","useState","requestParams","setRequestParams","requestBody","setRequestBody","JSON","parse","headers","count","results","addToHistory","callApi","historyfunc"],"mappings":"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","sourcesContent":["import React, { useReducer,useEffect,use } from \"react\";\nimport \"./app.scss\";\n// import \"./compononts/Result/result.scss\";\nimport Header from \"./compononts/header\";\nimport Footer from \"./compononts/Footer\";\nimport Form from \"./compononts/Form\";\nimport Results from \"./compononts/Result\";\nimport axios from \"axios\";\n\nconst intial = [];\n\nlet reducer = (history = intial, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case \"reqParams\":\n      history = [...history, payload];\n      console.log(history[0].method);\n      return history;\n    default:\n      return history;\n  }\n};\n// handle payload for reqParams:\nconst params = (url, method, result) => {\n  return {\n    type: \"reqParams\",\n    payload: {\n      url,\n      method,\n      result,\n    },\n  };\n};\n\nexport default function App() {\n  const [vars, dispatch] = useReducer(reducer, intial);\n  const [data, setData] = useState(null);\n  const [requestParams, setRequestParams] = useState({});\n  const [requestBody, setRequestBody] = useState({});\n\n\n  useEffect(async () => {\n    setData(null);\n    if (requestBody) {\n      const result = await axios[requestParams.method](requestParams.url, JSON.parse(requestBody));\n      const data = { headers: result.headers, count: result.data.count, results: result.data.results }\n      setData(data);\n      dispatch(addToHistory(requestParams.url,requestParams.method,data));\n    } else {\n      const result = await axios[requestParams.method](requestParams.url);\n      const data = { headers: result.headers, count: result.data.count, results: result.data.results }\n      setData(data);\n      dispatch(addToHistory(requestParams.url,requestParams.method,data));\n \n    }\n  }, [requestParams]);\n  function callApi(requestParams, requestBody) {\n    // mock output\n    setRequestParams(requestParams);\n    setRequestBody(requestBody);\n  }\n  function historyfunc(result){\n    setData(result);\n  }\n  return (\n    <>\n      <Header />\n      {/* <div>Request Method: {requestParams.method}</div>\n      <div>URL: {requestParams.url}</div> */}\n      <Form handleApiCall={callApi} />\n      {history&&<History historyfunc={historyfunc} history={history} />}\n      <Results data={data} />\n      <Footer />\n    </>\n  )\n}\n\n//   const callApi = async (requestParams, requestBody) => {\n//     //get the url and method:\n//     dispatch(params(requestParams.url, requestParams.method));\n\n//     // to get the results and then save them :\n//     let respond = await axios.get(requestParams.url);\n//     dispatch(params(requestParams.url, requestParams.method, respond.data));\n//   };\n//   console.log(vars);\n//   return (\n//     <>\n//       <React.Fragment>\n//         <Header />\n//         <div className=\"div1\" data-testid=\"url\">\n//           {\" \"}\n//           {vars[0].method} {vars[0].url}\n//           {/* {vars.history.result} */}\n//         </div>\n\n//         <Form handleApiCall={callApi} />\n//         <Results data={vars.result} />\n//         <Footer />\n//       </React.Fragment>\n//     </>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}