{"ast":null,"code":"import _classCallCheck from\"/home/hanin/projects/courses/RESTy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/hanin/projects/courses/RESTy/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/hanin/projects/courses/RESTy/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/hanin/projects/courses/RESTy/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./app.scss';// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from'./compononts/Header';import Footer from'./compononts/Footer';import Form from'./compononts/Form';import Results from'./compononts/Result';import{jsx as _jsx}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){_classCallCheck(this,App);return _super.apply(this,arguments);}_createClass(App,[{key:\"render\",value://   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: null,\n//       requestParams: {},\n//     };\n//   }\n//   callApi = (requestParams) => {\n//     // mock output\n//     const data = {\n//       count: 2,\n//       results: [\n//         {name: 'fake thing 1', url: 'http://fakethings.com/1'},\n//         {name: 'fake thing 2', url: 'http://fakethings.com/2'},\n//       ],\n//     };\n//     this.setState({data, requestParams});\n//   }\nfunction render(){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(Header,{})});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/hanin/projects/courses/RESTy/src/App.js"],"names":["React","Header","Footer","Form","Results","App","Component"],"mappings":"ocAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,YAAP,CAEA;AACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,C,8CAEMC,CAAAA,G,0NAEN;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,iBAAS,CACP,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,KAAC,MAAD,IADF,EADF,CAUD,C,iBAjCeL,KAAK,CAACM,S,EAoCxB,cAAeD,CAAAA,GAAf","sourcesContent":["import React from 'react';\n\nimport './app.scss';\n\n// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from './compononts/Header';\nimport Footer from './compononts/Footer';\nimport Form from './compononts/Form';\nimport Results from './compononts/Result';\n\nclass App extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: null,\n//       requestParams: {},\n//     };\n//   }\n\n//   callApi = (requestParams) => {\n//     // mock output\n//     const data = {\n//       count: 2,\n//       results: [\n//         {name: 'fake thing 1', url: 'http://fakethings.com/1'},\n//         {name: 'fake thing 2', url: 'http://fakethings.com/2'},\n//       ],\n//     };\n//     this.setState({data, requestParams});\n//   }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        {/* <div>Request Method: {this.state.requestParams.method}</div>\n        <div>URL: {this.state.requestParams.url}</div>\n        <Form handleApiCall={this.callApi} />\n        <Results data={this.state.data} />\n        <Footer /> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}