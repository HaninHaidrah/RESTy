{"ast":null,"code":"var _jsxFileName = \"/home/hanin/projects/courses/RESTy/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./app.scss\";\nimport \"./compononts/Result/result.scss\";\nimport Header from \"./compononts/header\";\nimport Footer from \"./compononts/Footer\";\nimport Form from \"./compononts/Form\";\nimport Results from \"./compononts/Result\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  let [data, setData] = useState(null);\n  let [count, setCount] = useState(0);\n  let [requestParams, setrequestParams] = useState({});\n  let [header, setHeader] = useState({});\n  const [state, setState] = useState(false);\n  let [reqBody, setBody] = useState(''); // useEffect(()=>{\n  // },[requestParams])\n\n  const callApi = async (requestParams, requestBody) => {\n    // let respond = await axios.get(requestParams.url);\n    setrequestParams(requestParams);\n    setBody(); // setHeader({\n    //   root: requestParams.url,\n    //   cache_control: \"string public\",\n    //   age: \"86400\",\n    //   s_maxage: \"86400\",\n    // });\n    // console.log(requestBody);\n    // // for create newRecord:\n    // if (requestBody) {\n    //   let reqBody = requestBody;\n    //   let createRecord = await axios.post(requestParams.url, reqBody);\n    //   setData(createRecord.data);\n    //   console.log(createRecord.data);\n    // }\n    // // for update the record:\n    // if (requestBody) {\n    //   let reqBody = requestBody;\n    //   let createRecord = await axios.put(requestParams.url, reqBody);\n    //   setData(createRecord.data);\n    //   console.log(createRecord.data);\n    // }\n    // console.log(respond.data);\n  };\n\n  useEffect(async () => {\n    const requestOptions = {\n      method: method,\n      body: requestBody\n    };\n    let results;\n\n    if (requestParams.url) {\n      setData(null);\n      setState(true);\n      method === 'GET' ? results = await fetch(requestParams.url) : results = await fetch(requestParams.url, requestOptions);\n      const dataParsed = await results.json();\n      setData(dataParsed);\n      setState(false);\n    }\n  }, [requestParams.method, requestParams.url]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div1\",\n      \"data-testid\": \"url\",\n      children: [\" \", requestParams.method, \" \", requestParams.url]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleApiCall: callApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      data: data,\n      count: count,\n      header: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bBo3tLwRHtv2f3a733WVTZKhGBE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/hanin/projects/courses/RESTy/src/App.js"],"names":["React","useState","useEffect","Header","Footer","Form","Results","axios","App","data","setData","count","setCount","requestParams","setrequestParams","header","setHeader","state","setState","reqBody","setBody","callApi","requestBody","requestOptions","method","body","results","url","fetch","dataParsed","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAO,iCAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAA9B;AACA,MAAI,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAD,CAAhC;AACA,MAAI,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAhD;AACA,MAAI,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAG,CAACkB,OAAD,EAASC,OAAT,IAAkBnB,QAAQ,CAAC,EAAD,CAA7B,CAN4B,CAS9B;AAEA;;AAGE,QAAMoB,OAAO,GAAG,OAAOR,aAAP,EAAsBS,WAAtB,KAAsC;AAEpD;AACAR,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACAO,IAAAA,OAAO,GAJ6C,CAKpD;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,GA9BD;;AA+BAlB,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMqB,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAEA,MADa;AAErBC,MAAAA,IAAI,EAAEH;AAFe,KAAvB;AAIA,QAAII,OAAJ;;AACA,QAAGb,aAAa,CAACc,GAAjB,EAAqB;AACrBjB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAQ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAM,MAAAA,MAAM,KAAG,KAAT,GACAE,OAAO,GAAG,MAAME,KAAK,CAACf,aAAa,CAACc,GAAf,CADrB,GAC2CD,OAAO,GAAG,MAAME,KAAK,CAACf,aAAa,CAACc,GAAf,EAAoBJ,cAApB,CADhE;AAEA,YAAMM,UAAU,GAAG,MAAMH,OAAO,CAACI,IAAR,EAAzB;AACApB,MAAAA,OAAO,CAACmB,UAAD,CAAP;AACAX,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACC;AACF,GAfQ,EAeN,CAACL,aAAa,CAACW,MAAf,EAAsBX,aAAa,CAACc,GAApC,CAfM,CAAT;AAiBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,qBAAY,KAAlC;AAAA,iBACG,GADH,EAEGd,aAAa,CAACW,MAFjB,OAE0BX,aAAa,CAACc,GAFxC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,IAAD;AAAM,MAAA,aAAa,EAAEN;AAArB;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEZ,IAAf;AAAqB,MAAA,KAAK,EAAEE,KAA5B;AAAmC,MAAA,MAAM,EAAEI;AAA3C;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA3EuBP,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./app.scss\";\nimport \"./compononts/Result/result.scss\";\nimport Header from \"./compononts/header\";\nimport Footer from \"./compononts/Footer\";\nimport Form from \"./compononts/Form\";\nimport Results from \"./compononts/Result\";\nimport axios from \"axios\";\n\nexport default function App() {\n  let [data, setData] = useState(null);\n  let [count, setCount] = useState(0);\n  let [requestParams, setrequestParams] = useState({});\n  let [header, setHeader] = useState({});\n  const [state, setState] = useState(false);\n  let[reqBody,setBody]=useState('')\n\n\n// useEffect(()=>{\n\n// },[requestParams])\n\n\n  const callApi = async (requestParams, requestBody) => {\n\n    // let respond = await axios.get(requestParams.url);\n    setrequestParams(requestParams);\n    setBody()\n    // setHeader({\n    //   root: requestParams.url,\n    //   cache_control: \"string public\",\n    //   age: \"86400\",\n    //   s_maxage: \"86400\",\n    // });\n\n    // console.log(requestBody);\n\n    // // for create newRecord:\n    // if (requestBody) {\n    //   let reqBody = requestBody;\n    //   let createRecord = await axios.post(requestParams.url, reqBody);\n    //   setData(createRecord.data);\n    //   console.log(createRecord.data);\n    // }\n    // // for update the record:\n    // if (requestBody) {\n    //   let reqBody = requestBody;\n    //   let createRecord = await axios.put(requestParams.url, reqBody);\n    //   setData(createRecord.data);\n    //   console.log(createRecord.data);\n    // }\n\n    // console.log(respond.data);\n  };\n  useEffect(async () => {\n    const requestOptions = {\n      method: method,\n      body: requestBody,\n    };\n    let results;\n    if(requestParams.url){\n    setData(null);\n    setState(true);\n    method==='GET' ?\n    results = await fetch(requestParams.url) : results = await fetch(requestParams.url, requestOptions)\n    const dataParsed = await results.json();\n    setData(dataParsed);\n    setState(false);\n    }\n  }, [requestParams.method,requestParams.url]);\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className=\"div1\" data-testid=\"url\">\n        {\" \"}\n        {requestParams.method} {requestParams.url}\n      </div>\n\n      <Form handleApiCall={callApi} />\n      <Results data={data} count={count} header={header} />\n      <Footer />\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}