{"ast":null,"code":"var _jsxFileName = \"/home/hanin/projects/courses/RESTy/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport \"./app.scss\"; // import \"./compononts/Result/result.scss\";\n\nimport Header from \"./compononts/header\";\nimport Footer from \"./compononts/Footer\";\nimport Form from \"./compononts/Form\";\nimport Results from \"./compononts/Result\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst intial = [];\n\nlet reducer = function () {\n  let history = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intial;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case \"reqParams\":\n      history = [...history, payload];\n      console.log(history[0].method);\n      return history;\n\n    default:\n      return history;\n  }\n}; // handle payload for reqParams:\n\n\nconst params = (url, method, result) => {\n  return {\n    type: \"reqParams\",\n    payload: {\n      url,\n      method,\n      result\n    }\n  };\n};\n\nexport default function App() {\n  _s();\n\n  const [vars, dispatch] = useReducer(reducer, intial);\n  const [data, setData] = useState(null);\n  const [requestParams, setRequestParams] = useState({});\n  const [requestBody, setRequestBody] = useState({});\n  useEffect(async () => {\n    setData(null);\n\n    if (requestBody) {\n      const result = await axios[requestParams.method](requestParams.url, JSON.parse(requestBody));\n      const data = {\n        headers: result.headers,\n        count: result.data.count,\n        results: result.data.results\n      };\n      setData(data);\n      dispatch(addToHistory(requestParams.url, requestParams.method, data));\n    } else {\n      const result = await axios[requestParams.method](requestParams.url);\n      const data = {\n        headers: result.headers,\n        count: result.data.count,\n        results: result.data.results\n      };\n      setData(data);\n      dispatch(addToHistory(requestParams.url, requestParams.method, data));\n    }\n  }, [requestParams]);\n\n  const callApi = async (requestParams, requestBody) => {\n    //get the url and method:\n    dispatch(params(requestParams.url, requestParams.method)); // to get the results and then save them :\n\n    let respond = await axios.get(requestParams.url);\n    dispatch(params(requestParams.url, requestParams.method, respond.data));\n  };\n\n  console.log(vars);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div1\",\n        \"data-testid\": \"url\",\n        children: [\" \", vars[0].method, \" \", vars[0].url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handleApiCall: callApi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        data: vars.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"McUBdIX88Oo3TTPTmW6QLP7eeaY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/hanin/projects/courses/RESTy/src/App.js"],"names":["React","useReducer","Header","Footer","Form","Results","axios","intial","reducer","history","action","type","payload","console","log","method","params","url","result","App","vars","dispatch","data","setData","useState","requestParams","setRequestParams","requestBody","setRequestBody","useEffect","JSON","parse","headers","count","results","addToHistory","callApi","respond","get"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport \"./app.scss\";\n// import \"./compononts/Result/result.scss\";\nimport Header from \"./compononts/header\";\nimport Footer from \"./compononts/Footer\";\nimport Form from \"./compononts/Form\";\nimport Results from \"./compononts/Result\";\nimport axios from \"axios\";\n\nconst intial = [];\n\nlet reducer = (history = intial, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case \"reqParams\":\n      history = [...history, payload];\n      console.log(history[0].method);\n      return history;\n    default:\n      return history;\n  }\n};\n// handle payload for reqParams:\nconst params = (url, method, result) => {\n  return {\n    type: \"reqParams\",\n    payload: {\n      url,\n      method,\n      result,\n    },\n  };\n};\n\nexport default function App() {\n  const [vars, dispatch] = useReducer(reducer, intial);\nconst [data, setData] = useState(null);\n  const [requestParams, setRequestParams] = useState({});\n  const [requestBody, setRequestBody] = useState({});\n\n\n  useEffect(async () => {\n    setData(null);\n    if (requestBody) {\n      const result = await axios[requestParams.method](requestParams.url, JSON.parse(requestBody));\n      const data = { headers: result.headers, count: result.data.count, results: result.data.results }\n      setData(data);\n      dispatch(addToHistory(requestParams.url,requestParams.method,data));\n    } else {\n      const result = await axios[requestParams.method](requestParams.url);\n      const data = { headers: result.headers, count: result.data.count, results: result.data.results }\n      setData(data);\n      dispatch(addToHistory(requestParams.url,requestParams.method,data));\n \n    }\n  }, [requestParams]);\n  const callApi = async (requestParams, requestBody) => {\n    //get the url and method:\n    dispatch(params(requestParams.url, requestParams.method));\n\n    // to get the results and then save them :\n    let respond = await axios.get(requestParams.url);\n    dispatch(params(requestParams.url, requestParams.method, respond.data));\n  };\n  console.log(vars);\n  return (\n    <>\n      <React.Fragment>\n        <Header />\n        <div className=\"div1\" data-testid=\"url\">\n          {\" \"}\n          {vars[0].method} {vars[0].url}\n          {/* {vars.history.result} */}\n        </div>\n\n        <Form handleApiCall={callApi} />\n        <Results data={vars.result} />\n        <Footer />\n      </React.Fragment>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}