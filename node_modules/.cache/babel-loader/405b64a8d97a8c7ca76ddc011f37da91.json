{"ast":null,"code":"var _jsxFileName = \"/home/hanin/projects/courses/RESTy/src/App.js\";\nimport React from \"react\";\nimport \"./app.scss\";\nimport \"./compononts/Result/result.scss\"; // Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\n\nimport Header from \"./compononts/header\";\nimport Footer from \"./compononts/Footer\";\nimport Form from \"./compononts/Form\";\nimport Results from \"./compononts/Result\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async (requestParams, updateBody) => {\n      // const respond= await axios.get(this.state.requestParams.method)\n      // console.log(respond.data);\n      // mock output\n      const data = {\n        count: 2,\n        Header: [{\n          root: \"fakeData\",\n          cache_control: \"string public\",\n          age: \"86400\",\n          s_maxage: \"86400\"\n        }],\n        Results: [{\n          name: \"fake thing 1\",\n          url: \"http://fakethings.com/1\"\n        }, {\n          name: \"fake thing 2\",\n          url: \"http://fakethings.com/2\"\n        }]\n      };\n      this.setState({\n        data,\n        requestParams\n      });\n      const update = {\n        count: 2,\n        Header: [{\n          root: \"fakeData\",\n          cache_control: \"string public\",\n          age: \"86400\",\n          s_maxage: \"86400\"\n        }],\n        Results: [{\n          body: updateBody\n        }]\n      };\n\n      if (updateBody) {\n        this.setState({\n          data: update\n        });\n      }\n    };\n\n    this.state = {\n      data: null,\n      requestParams: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div1\",\n        \"data-testid\": \"url\",\n        children: [\" \", this.state.requestParams.method, \" \", this.state.requestParams.url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handleApiCall: this.callApi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        data: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hanin/projects/courses/RESTy/src/App.js"],"names":["React","Header","Footer","Form","Results","axios","App","Component","constructor","props","callApi","requestParams","updateBody","data","count","root","cache_control","age","s_maxage","name","url","setState","update","body","state","render","method"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,YAAP;AACA,OAAO,iCAAP,C,CAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,OARmB,GAQT,OAAOC,aAAP,EAAsBC,UAAtB,KAAqC;AAG7C;AACA;AACA;AACA,YAAMC,IAAI,GAAG;AACXC,QAAAA,KAAK,EAAE,CADI;AAEXb,QAAAA,MAAM,EAAE,CACN;AACEc,UAAAA,IAAI,EAAE,UADR;AAEEC,UAAAA,aAAa,EAAE,eAFjB;AAGEC,UAAAA,GAAG,EAAE,OAHP;AAIEC,UAAAA,QAAQ,EAAE;AAJZ,SADM,CAFG;AAUXd,QAAAA,OAAO,EAAE,CACP;AAAEe,UAAAA,IAAI,EAAE,cAAR;AAAwBC,UAAAA,GAAG,EAAE;AAA7B,SADO,EAEP;AAAED,UAAAA,IAAI,EAAE,cAAR;AAAwBC,UAAAA,GAAG,EAAE;AAA7B,SAFO;AAVE,OAAb;AAiBA,WAAKC,QAAL,CAAc;AAAER,QAAAA,IAAF;AAAQF,QAAAA;AAAR,OAAd;AAEA,YAAMW,MAAM,GAAG;AACbR,QAAAA,KAAK,EAAE,CADM;AAEbb,QAAAA,MAAM,EAAE,CACN;AACEc,UAAAA,IAAI,EAAE,UADR;AAEEC,UAAAA,aAAa,EAAE,eAFjB;AAGEC,UAAAA,GAAG,EAAE,OAHP;AAIEC,UAAAA,QAAQ,EAAE;AAJZ,SADM,CAFK;AAUbd,QAAAA,OAAO,EAAE,CAAC;AAAEmB,UAAAA,IAAI,EAAEX;AAAR,SAAD;AAVI,OAAf;;AAYA,UAAIA,UAAJ,EAAgB;AACd,aAAKS,QAAL,CAAc;AAAER,UAAAA,IAAI,EAAES;AAAR,SAAd;AACD;AACF,KAhDkB;;AAEjB,SAAKE,KAAL,GAAa;AACXX,MAAAA,IAAI,EAAE,IADK;AAEXF,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAID;;AA4CDc,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,uBAAY,KAAlC;AAAA,mBACG,GADH,EAEG,KAAKD,KAAL,CAAWb,aAAX,CAAyBe,MAF5B,OAEqC,KAAKF,KAAL,CAAWb,aAAX,CAAyBS,GAF9D;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,IAAD;AAAM,QAAA,aAAa,EAAE,KAAKV;AAA1B;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKc,KAAL,CAAWX;AAA1B;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAjE+B;;AAoElC,eAAeP,GAAf","sourcesContent":["import React from \"react\";\n\nimport \"./app.scss\";\nimport \"./compononts/Result/result.scss\";\n\n// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from \"./compononts/header\";\nimport Footer from \"./compononts/Footer\";\nimport Form from \"./compononts/Form\";\nimport Results from \"./compononts/Result\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      requestParams: {},\n    };\n  }\n\n  callApi = async (requestParams, updateBody) => {\n\n\n    // const respond= await axios.get(this.state.requestParams.method)\n    // console.log(respond.data);\n    // mock output\n    const data = {\n      count: 2,\n      Header: [\n        {\n          root: \"fakeData\",\n          cache_control: \"string public\",\n          age: \"86400\",\n          s_maxage: \"86400\",\n        },\n      ],\n      Results: [\n        { name: \"fake thing 1\", url: \"http://fakethings.com/1\" },\n        { name: \"fake thing 2\", url: \"http://fakethings.com/2\" },\n      ],\n    };\n    \n\n    this.setState({ data, requestParams });\n\n    const update = {\n      count: 2,\n      Header: [\n        {\n          root: \"fakeData\",\n          cache_control: \"string public\",\n          age: \"86400\",\n          s_maxage: \"86400\",\n        },\n      ],\n      Results: [{ body: updateBody }],\n    };\n    if (updateBody) {\n      this.setState({ data: update });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div className=\"div1\" data-testid=\"url\">\n          {\" \"}\n          {this.state.requestParams.method} {this.state.requestParams.url}\n        </div>\n        \n        <Form handleApiCall={this.callApi} />\n        <Results data={this.state.data} />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}